<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lwb.mapper.UserInfoMapper" >
  <resultMap id="baseMap" type="com.lwb.model.UserInfo" >
    <id column="user_id" property="userId"  />
    <result column="user_name" property="userName"  />
    <result column="pass_word" property="passWord"  />
    <result column="nick_name" property="nickName"  />
    <result column="real_name" property="realName"  />
    <result column="head_img" property="headImg"  />
    <result column="birthday" property="birthday"  />
    <result column="eamil" property="eamil"  />
    <result column="mobile_number" property="mobileNumber"  />
    <result column="dept_id" property="deptId"/>
    <result column="sex" property="sex"/>
    <result column="user_type" property="userType"/>
    <result column="open_id" property="openId"/>
    <result column="status" property="status"/>
    <result column="create_time" property="createTime"/>
  </resultMap>
  <sql id="columns" >
    user_id, user_name, pass_word, nick_name, real_name, head_img, birthday, eamil, mobile_number,
    dept_id, sex, user_type,open_id,status,create_time
  </sql>
  <select id="get" resultMap="baseMap" parameterType="java.lang.String" >
    select 
    <include refid="columns" />
    from tv_userinfo
    where user_id = #{userId}
  </select>
  
  <select id="login" resultMap="baseMap" parameterType="map">
  	select 
    <include refid="columns" />
    from tv_userinfo
    where user_name = #{userName} AND pass_word = #{userPwd}
  </select>
  
  <delete id="remove" parameterType="java.lang.String" >
    delete from tv_userinfo
    where user_id = #{userId}
  </delete>
  <insert id="add" parameterType="com.lwb.model.UserInfo" >
    insert into tv_userinfo (user_id, user_name, pass_word, 
      nick_name, real_name, head_img, 
      birthday, eamil, mobile_number, 
      dept_id, sex, user_type
      )
    values (#{userId}, #{userName}, #{passWord}, 
      #{nickName}, #{realName}, #{headImg}, 
      #{birthday}, #{eamil}, #{mobileNumber}, 
      #{deptId}, #{sex}, #{userType}
      )
  </insert>
  
  <update id="setNic" parameterType="map" >
  	update tv_userinfo set nick_name=#{nickName} where user_id = #{userId}
  </update>
  
   <update id="setImg" parameterType="map" >
  	update tv_userinfo set head_img=#{headImg} where user_id = #{userId}
  </update>
  
  <update id="setEamil" parameterType="map" >
  	update tv_userinfo set eamil=#{eamil} where user_id = #{userId}
  </update>
  
  <update id="setMobileNumber" parameterType="map" >
  	update tv_userinfo set mobile_number=#{mobileNumber} where user_id = #{userId}
  </update>
  
  <update id="setBasic" parameterType="com.lwb.model.UserInfo" >
    update tv_userinfo
    <set >
      <if test="userName != null" >
        user_name = #{userName},
      </if>
      <if test="passWord != null" >
        pass_word = #{passWord},
      </if>
      <if test="realName != null" >
        real_name = #{realName},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId},
      </if>
      <if test="sex != null" >
        sex = #{sex},
      </if>
      <if test="userType >=0" >
        user_type = #{userType},
      </if>
    </set>
    where user_id = #{userId}
  </update>
  
  <sql id="where_caulce" >
 	<where> 
 		<if test="_parameter.containsKey('userType')">  
	        	 AND user_type = #{userType}
	    </if>
		<if test="_parameter.containsKey('status')">  
	        	 AND status = #{status}
	    </if>
	    <if test="_parameter.containsKey('mobileNumber')">  
	        	 AND mobile_number = #{mobileNumber}
	    </if>
	 </where>
  </sql>
  
   <select id="count" parameterType="map" resultType="java.lang.Integer" >
    select count(*) from tv_userinfo 
    <include refid="where_caulce" />
  </select>

  <select id="getList" parameterType="map" resultMap="baseMap">
  	select 
  	<include refid="columns" />
    from tv_userinfo <include refid="where_caulce" /> 
    order by create_time desc LIMIT #{start},#{end}
  </select>
  
</mapper>